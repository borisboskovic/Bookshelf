// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace BookshelfAPI.Data.Models
{
    [Index(nameof(Book_Id), Name = "ISSUEOF_FK")]
    [Index(nameof(Language_Id), Name = "LANGUAGEOFISSUE_FK")]
    [Index(nameof(Publisher_Id), Name = "PUBLISHEDBY_FK")]
    public partial class BookIssue
    {
        public BookIssue()
        {
            BookInReadingChallange = new HashSet<BookInReadingChallange>();
            BookIssueInEdition = new HashSet<BookIssueInEdition>();
            BookOnBookshelf = new HashSet<BookOnBookshelf>();
            CurrentlyReading = new HashSet<CurrentlyReading>();
            Read = new HashSet<Read>();
            Review = new HashSet<Review>();
            WantToRead = new HashSet<WantToRead>();
        }

        [Key]
        public int Id { get; set; }
        [Key]
        public int Book_Id { get; set; }
        public int Publisher_Id { get; set; }
        public int Language_Id { get; set; }
        [StringLength(255)]
        [Column(TypeName ="nvarchar")]
        public string Title { get; set; }
        public int Tirage { get; set; }
        public int NumberOfPages { get; set; }
        public bool IsHardcover { get; set; }
        [StringLength(50)]
        public string ISBN { get; set; }
        [StringLength(50)]
        public string ISBN13 { get; set; }
        [StringLength(4000)]
        [Column(TypeName ="nvarchar")]
        public string Summary { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? PublishedOn { get; set; }
        [StringLength(2000)]
        public string ImageUrl { get; set; }

        [ForeignKey(nameof(Book_Id))]
        [InverseProperty("BookIssue")]
        public virtual Book Book { get; set; }
        [ForeignKey(nameof(Language_Id))]
        [InverseProperty("BookIssue")]
        public virtual Language Language { get; set; }
        [ForeignKey(nameof(Publisher_Id))]
        [InverseProperty("BookIssue")]
        public virtual Publisher Publisher { get; set; }
        [InverseProperty("Book")]
        public virtual ICollection<BookInReadingChallange> BookInReadingChallange { get; set; }
        [InverseProperty("Book")]
        public virtual ICollection<BookIssueInEdition> BookIssueInEdition { get; set; }
        [InverseProperty("Book")]
        public virtual ICollection<BookOnBookshelf> BookOnBookshelf { get; set; }
        [InverseProperty("Book")]
        public virtual ICollection<CurrentlyReading> CurrentlyReading { get; set; }
        [InverseProperty("Book")]
        public virtual ICollection<Read> Read { get; set; }
        [InverseProperty("Book")]
        public virtual ICollection<Review> Review { get; set; }
        [InverseProperty("Book")]
        public virtual ICollection<WantToRead> WantToRead { get; set; }
    }
}